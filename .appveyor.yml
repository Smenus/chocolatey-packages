# AU template: https://github.com/majkinetor/au-packages-template

version: '{build}'
max_jobs: 1
image: Visual Studio 2022
# History plugin requires complete log
#clone_depth: 5
branches:
  only:
  - master
#build:
#  verbosity: minimal

environment:
  # Set au version to use or omit to use the latest. Specify branch name to use development version from Github
  au_version: 1.0.0
  au_push: true
  # Force test: use 1 to test all, or N to split testing into N groups
  au_test_groups: 4

  # Github token to commit pushed packages to repository
  github_user_repo: smenus/chocolatey-packages
  github_api_key:
    secure: 4c6SEwdUmbkthgn6SvBtRaOoDeflvlF1w+QIiHjZrv14ySza0TSjWTiRLAAYkr7f31R8DvupSYBmr8cwSwl6UApu1ypKafae4wERjrZpP0ejkcIrMVTE2UyS/NfIDQ1c

  # ID of the gist used to save run results - create a gist under the github_user (secret or not) and grab the id - https://gist.github.com/name/id
  gist_id: 569565b2530f1c91a5cad329673d9309

  # Force test: gist id for test results
  gist_id_test:

  # Chocolatey API key - to push updated packages
  api_key:
    secure: hRdf1FDLmxR5vxZ/DJ4q0PRIIdJiiZKSkeSoxgvDRUh+UxMovKYL6nOZmrCRwW03

  #Chocolatey version we want to use when checking for updates (usually latest).
  choco_version: '2.4.3'
  choco_version_pr: '2.2.2'
  nupkg_cache_path: C:\packages

init:
- git config --global user.email "smenus@me.com"
- git config --global user.name "Sean Fleming"
- git config --global core.safecrlf false

install:
- ps: |
    $chocoVersion = if (($Env:APPVEYOR_PULL_REQUEST_NUMBER -eq $null) -or ($ENV:APPVEYOR_PULL_REQUEST_NUMBER -eq '')) { $Env:choco_version } else { $Env:choco_version_pr }
    if (!(Test-Path "$env:nupkg_cache_path")) { mkdir -Force "$env:nupkg_cache_path" }
    @{
      'chocolatey' = $chocoVersion

      'wormies-au-helpers' = '0.4.1'
      'chocolatey-core.extension' = '1.4.0'
      'chocolatey-community-validation.extension' = '0.2.0'
    }.GetEnumerator() | % {
      if (!(Test-Path "${env:nupkg_cache_path}\$($_.Key).$($_.Value).nupkg")) { rm "${env:nupkg_cache_path}\$($_.Key).*.nupkg" ; Invoke-WebRequest "https://chocolatey.org/api/v2/package/$($_.Key)/$($_.Value)" -OutFile "${env:nupkg_cache_path}\$($_.Key).$($_.Value).nupkg" }
      if ($_.Key -eq 'chocolatey') { choco upgrade $_.Key --version $_.Value --source ${env:nupkg_cache_path} --allow-downgrade --pre }
      else { choco install $_.Key --version $_.Value --source ${env:nupkg_cache_path} --ignore-dependencies }
    }
    rm "$env:ChocolateyInstall\logs\*.log"
- ps: 'Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version'
- ps: $PSVersionTable
- git --version
- choco --version
- ps: |
    choco install chocolatey-au --version $Env:au_version -y

- ps: |
    "Build info"
    '  {0,-20} {1}' -f 'SCHEDULED BUILD:', ($Env:APPVEYOR_SCHEDULED_BUILD -eq 'true')
    '  {0,-20} {1}' -f 'FORCED BUILD:'   , ($Env:APPVEYOR_FORCED_BUILD    -eq 'true')
    '  {0,-20} {1}' -f 'RE BUILD:'       , ($Env:APPVEYOR_RE_BUILD        -eq 'true')

build_script:
- ps: |
    $ErrorActionPreference = 'Continue'

    if ($Env:APPVEYOR_PROJECT_NAME  -like '*test*') { ./test_all.ps1 "random $Env:au_test_groups"; return }

    if ( ($Env:APPVEYOR_SCHEDULED_BUILD -ne 'true') -and ($Env:APPVEYOR_FORCED_BUILD -ne 'true') ) {
        switch -regex ($Env:APPVEYOR_REPO_COMMIT_MESSAGE)
        {
            '\[AU (.+?)\]'   { $forced = $Matches[1] }

            '\[PUSH (.+?)\]' {
                $packages = $Matches[1] -split ' '
                Write-Host "PUSHING PACKAGES: $packages"
                foreach ($package in $packages) {
                    Write-Host ("{0}`n{1}`n" -f ('-'*60), "PACKAGE: $package")
                    $package_dir = ls -recurse | ? { $_.Name -eq "$package.nuspec"} | select -First 1 | % Directory
                    if (!$package_dir) { Write-Warning "Can't find package '$package'"; continue }
                    try {
                      pushd $package_dir
                      if (Test-Path update.ps1 -ea 0) { ./update.ps1 }
                      choco pack
                      Push-Package -All
                    } finally {
                      popd
                    }
                }
                return
            }
        }
    }

    ./update_all.ps1 -ForcedPackages $forced

on_finish:
- ps: |
    if (Test-Path $Env:TEMP\chocolatey\au) { 7z a  -mx9 au_temp.7z $Env:TEMP\chocolatey\au\* }
    $paths = @(
      Resolve-Path "$env:TEMP\artifacts\*" -ea 0
      Resolve-Path "$env:ChocolateyInstall\logs\*.log" -ea 0
      'au_temp.7z'
      'update_info.xml'
      'Update-AUPackages.md'
      'Update-History.md'
    )
    $paths | ? { Test-Path $_ } | % { Push-AppveyorArtifact $_ }
#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

notifications:
- provider: Email
  to: smenus@me.com
  on_build_success: false
  on_build_failure: true
  on_build_status_changed: true
- provider: GitHubPullRequest
  template: "{{#passed}}:white_check_mark: Package verification completed without issues. PR is now pending human review{{/passed}}{{#failed}}:x: Package verification failed, please review the [Appveyor Logs]({{buildUrl}}) and the provided [Artifacts]({{buildUrl}}/artifacts) before requesting a human reviewer to take a look.{{/failed}}"

cache:
  - '%nupkg_cache_path% -> .appveyor.yml'